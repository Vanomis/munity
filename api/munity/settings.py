"""
Django settings for munity project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import sys
# from celery.schedules import crontab
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
APPS_DIR = os.path.realpath(os.path.join(BASE_DIR, "apps"))
sys.path.append(APPS_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xipgxnfqntabyg05g!hc%jyftnlu$8zrg05g%tv(oaj0d&kx_9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("API_DEBUG", None)

ALLOWED_HOSTS = []

AUTH_USER_MODEL = "users.User"
EMAIL_BACKEND = "django_mailjet.backends.MailjetBackend"

# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_beat',
    "django.contrib.sites",
]

MUNITY_APPS = [
    "munity", # need to add munity to add commands
    "admin_panel",
    "users",
    "acl",
    "base",
    "dashboards",
    "devices",
    "graphs",
    "groups",
    "outputs",
    "invites",
    "settings",
    "rest_framework_simplejwt.token_blacklist",
]

PLUGINS_APPS = []

INSTALLED_APPS = DJANGO_APPS + PLUGINS_APPS + MUNITY_APPS


MIDDLEWARE = [
    "base.middlewares.WorkspaceSlug",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "base.middlewares.TimezoneMiddleware",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
#     "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.URLPathVersioning",
#     "DEFAULT_PAGINATION_CLASS": "base.pagination.CustomPagination",
#     "PAGE_SIZE": 3000,
}

ROOT_URLCONF = 'munity.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': os.getenv("JWT_SECRET_KEY", "munityapps.comarecommunityapps!"),
    'AUDIENCE': "munity frontend",
    'ISSUER': "munity backend",
    'JTI_CLAIM': 'jti',
}

WSGI_APPLICATION = 'munity.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {  # This DB is supposed to always have the latest version of the schema described by the Django Model
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ["DEFAULT_DB_NAME"],
        "USER": os.environ["POSTGRES_USER"],
        "PASSWORD": os.environ["POSTGRES_PASSWORD"],
        "HOST": os.environ["DB_HOST"],
        "PORT": os.environ["DB_PORT"],
    },
    "django_celery_beat": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "django_celery_beat",
        "USER": os.environ["POSTGRES_USER"],
        "PASSWORD": os.environ["POSTGRES_PASSWORD"],
        "HOST": os.environ["DB_HOST"],
        "PORT": os.environ["DB_PORT"],
    },
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CELERY Configuration
CELERY_BROKER_URL = f"redis://redis/0"
CELERY_RESULT_BACKEND = f"redis://redis/1"
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_RESULT_SERIALIZER = "json"
CELERY_TASK_SERIALIZER = "json"
CELERY_TIMEZONE = TIME_ZONE
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers:DatabaseScheduler"
CELERY_BEAT_SCHEDULE = {}
# CELERY_BEAT_SCHEDULE.update(
#     {
#         "test": {
#             "task": "api.tasks.test",
#             "schedule": crontab(minute='*'),
#             "args": tuple(),
#         }
#     }
# )

PAGE_SIZE = os.getenv("DEFAULT_PAGE_SIZE", 20)
INVITE_KEY_EXPIRATION_DAYS = os.getenv("INVITE_KEY_EXPIRATION_DAYS", 7)
SECRET_KEY = os.getenv("SECRET_KEY", '\o/munityapps.comisacommunityofapps\o/')
APP_SUFFIX_URL = os.getenv("APP_SUFFIX_URL", "localhost")
SUPPORT_MAIL = os.getenv("SUPPORT_MAIL", "cyril@munityapps.com")
RESET_PASSWORD_KEY_EXPIRATION_MINUTES = os.getenv("RESET_PASSWORD_KEY_EXPIRATION_MINUTES", 20)

CLOUDINARY_CLOUD_NAME = os.getenv("CLOUDINARY_CLOUD_NAME", "")
CLOUDINARY_API_SECRET = os.getenv("CLOUDINARY_API_SECRET", "")
CLOUDINARY_API_KEY = os.getenv("CLOUDINARY_API_KEY", "")

MAILJET_API_KEY = os.getenv("MAILJET_API_KEY", None)
MAILJET_API_SECRET = os.getenv("MAILJET_API_SECRET", None)